{"version":3,"sources":["services/getData.ts","styles/colors.ts","pages/ArtistPage/style.tsx","components/Album/style.tsx","images/load-image-gif.gif","images/default.jpg","utils/isEmpty.ts","components/Album/Album.tsx","components/Tracks/style.tsx","components/Tracks/Tracks.tsx","components/Loading/style.tsx","images/loading.gif","components/Loading/Loading.tsx","images/background.jpg","components/Error/style.tsx","components/Error/Error.tsx","pages/ArtistPage/ArtistPage.tsx","pages/Index/style.tsx","pages/Index/Index.tsx","pages/AlbumPage/style.tsx","pages/AlbumPage/AlbumPage.tsx","components/404/style.tsx","images/404.gif","components/404/404.tsx","routes/Routes.tsx","App.tsx","styles/GlobalStyles.tsx","index.tsx"],"names":["baseUrl","fetcher","url","fetch","then","resp","json","useAlbum","id","useSWR","data","error","albumData","isLoading","isError","fontColor","cinza","MainContainer","styled","main","colors","Albums","div","img","def","Album","album","map","to","idArtist","idAlbum","className","src","gif","isEmpty","strAlbumThumb","alt","TracksContainer","section","Tracks","useTrack","randomIndex","max","min","Math","floor","random","ceil","mvids","length","strMusicVid","split","frameBorder","title","style","justifyContent","LoadingContainer","Loading","ErrorContainer","Error","htmlBackground","document","querySelector","ArtistPage","name","useArtist","useParams","artists","toast","strArtistWideThumb","backgroundImage","background","size","color","href","strWebsite","target","rel","strArtistLogo","strArtist","intFormedYear","strGenre","strStyle","strTwitter","strFacebook","strBiographyEN","strArtistThumb","BackgroundContainer","SearchContainer","Index","useState","artist","setArtist","redirect","setRedirect","searched","setSearched","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","handleSubmit","e","a","preventDefault","request","findIndex","obj","toLocaleLowerCase","image","copyState","menor","forEach","minItemIndex","splice","onSubmit","autoComplete","type","placeholder","onChange","value","disabled","opacity","artistiSearched","AlbumContainer","AlbumPage","artistId","albumId","useAlbumTracks","albumError","albumLoading","history","useHistory","onClick","goBack","track","strAlbum","find","strTrack","NotFoundContainer","NotFound","notfound","Routes","exact","path","component","App","GlobalStyles","createGlobalStyle","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f9fe1aec.chunk.js","sourcesContent":["import useSWR from 'swr';\nimport IAlbum from '../interfaces/IAlbum';\nimport IAlbumTrack from '../interfaces/IAlbumTrack';\nimport IArtist from '../interfaces/IArtist';\nimport ITrack from '../interfaces/ITrack';\n\nexport const baseUrl = 'https://www.theaudiodb.com/api/v1/json/2';\n\nconst fetcher = (url: string): Promise<any> =>\n    fetch(url).then((resp) => resp.json());\n\nexport function useArtist(name: string): IArtist {\n    const { data, error } = useSWR(`${baseUrl}/search.php?s=${name}`, fetcher);\n\n    return {\n        data,\n        isLoading: !data && !error,\n        isError: error,\n    };\n}\n\nexport function useAlbum(id: string): IAlbum {\n    const { data, error } = useSWR(`${baseUrl}/album.php?i=${id}`, fetcher);\n\n    return {\n        albumData: data,\n        isLoading: !data && !error,\n        isError: error,\n    };\n}\n\nexport function useTrack(id: string): ITrack {\n    const { data, error } = useSWR(`${baseUrl}/mvid.php?i=${id}`, fetcher);\n\n    return {\n        data,\n        isLoading: !data && !error,\n        isError: error,\n    };\n}\n\nexport function useAlbumTracks(id: string): IAlbumTrack {\n    const { data, error } = useSWR(`${baseUrl}/track.php?m=${id}`, fetcher);\n\n    return {\n        data,\n        isLoading: !data && !error,\n        isError: error,\n    };\n}\n","export const white = '#fff';\r\nexport const black = '#000';\r\nexport const fontColor = '#d8d8d8';\r\nexport const cinza = '#e9e7f8';\r\n","import styled from 'styled-components';\r\nimport * as colors from '../../styles/colors';\r\n\r\nexport const MainContainer = styled.main`\r\n    background: rgba(28, 32, 44, 0.8);\r\n    max-width: 100%;\r\n    padding: 25px;\r\n    margin: 0 auto;\r\n\r\n    section {\r\n        max-width: 1200px;\r\n        margin: 0 auto;\r\n    }\r\n\r\n    h1 {\r\n        color: ${colors.fontColor};\r\n        font-size: 70px;\r\n        text-align: center;\r\n\r\n        @media (max-width: 640px) {\r\n            font-size: 55px;\r\n        }\r\n    }\r\n\r\n    .artist_logo {\r\n        display: flex;\r\n        align-content: center;\r\n        justify-content: center;\r\n        max-width: 100%;\r\n        h1 {\r\n            width: 100%;\r\n\r\n            img {\r\n                height: 100%;\r\n                max-width: 100%;\r\n            }\r\n        }\r\n    }\r\n\r\n    .artist_informations {\r\n        a {\r\n            text-decoration: none;\r\n        }\r\n        .artist_informations-data,\r\n        .artist_informations-social-medias {\r\n            display: flex;\r\n            flex-direction: column;\r\n\r\n            li,\r\n            a {\r\n                color: ${colors.fontColor};\r\n                list-style: none;\r\n                font-size: 20px;\r\n                text-decoration: none;\r\n            }\r\n        }\r\n\r\n        .artist_informations-social-medias {\r\n            margin-top: 20px;\r\n        }\r\n\r\n        p {\r\n            color: ${colors.fontColor};\r\n            font-size: 16px;\r\n            margin: 20px 0;\r\n            text-align: left;\r\n            max-height: 400px;\r\n            overflow-y: auto;\r\n\r\n            &::-webkit-scrollbar {\r\n                width: 0.4em;\r\n            }\r\n\r\n            &::-webkit-scrollbar-track {\r\n                box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n            }\r\n\r\n            &::-webkit-scrollbar-thumb {\r\n                background-color: ${colors.fontColor};\r\n                outline: 1px solid slategrey;\r\n            }\r\n        }\r\n    }\r\n\r\n    .artist_informations-image {\r\n        margin: 30px auto 0 auto;\r\n        max-height: 700px;\r\n        max-width: 700px;\r\n        img {\r\n            height: 100%;\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    .album-container,\r\n    .tracks-container {\r\n        margin-top: 80px;\r\n    }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Albums = styled.div`\r\n    margin-top: 40px;\r\n\r\n    display: grid;\r\n    align-content: center;\r\n    justify-content: center;\r\n    gap: 20px;\r\n    grid-template-columns: repeat(4, 0.22234fr);\r\n\r\n    @media (max-width: 640px) {\r\n        gap: 10px;\r\n        grid-template-columns: repeat(3, 1fr);\r\n    }\r\n\r\n    a {\r\n        display: block;\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n\r\n    .album {\r\n        height: 100%;\r\n        width: 100%;\r\n        img {\r\n            object-fit: cover;\r\n            height: 100%;\r\n            width: 100%;\r\n        }\r\n\r\n        &:hover {\r\n            transform: scale(1.3);\r\n            transition: all 0.3s;\r\n        }\r\n    }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/load-image-gif.b74d0983.gif\";","export default __webpack_public_path__ + \"static/media/default.2d86ca35.jpg\";","import def from '../images/default.jpg';\r\n\r\nexport default (img: string | undefined): string | undefined => {\r\n    if (img) return img;\r\n    return def;\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport { useAlbum } from '../../services/getData';\r\nimport { Albums } from './style';\r\nimport gif from '../../images/load-image-gif.gif';\r\nimport isEmpty from '../../utils/isEmpty';\r\n\r\nexport default function Album({ id }: { id: string }): JSX.Element {\r\n    const { albumData, isLoading, isError } = useAlbum(id);\r\n\r\n    if (isLoading) return <h1>Loading...</h1>;\r\n\r\n    if (isError) return <h1>Error...</h1>;\r\n\r\n    return (\r\n        <Albums>\r\n            {albumData.album.map((album) => (\r\n                <Link to={`/album/${album.idArtist}/${album.idAlbum}`}>\r\n                    <div className=\"album\">\r\n                        <img\r\n                            src={\r\n                                !isLoading ? isEmpty(album.strAlbumThumb) : gif\r\n                            }\r\n                            alt={album.idAlbum}\r\n                        />\r\n                    </div>\r\n                </Link>\r\n            ))}\r\n        </Albums>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\nimport * as colors from '../../styles/colors';\r\n\r\nexport const TracksContainer = styled.section`\r\n    margin: 40px auto 0 auto !important;\r\n    display: flex;\r\n    gap: 50px;\r\n\r\n    @media (max-width: 1546px) {\r\n        justify-content: center;\r\n    }\r\n\r\n    @media (max-width: 1020px) {\r\n        flex-direction: column;\r\n    }\r\n\r\n    iframe {\r\n        min-height: 280px;\r\n        min-width: 420px;\r\n\r\n        @media (max-width: 1546px) {\r\n            max-height: 280px;\r\n            min-width: auto;\r\n        }\r\n\r\n        @media (max-width: 1020px) {\r\n            max-height: 400px;\r\n        }\r\n\r\n        @media (max-width: 640px) {\r\n            min-height: 280px;\r\n            min-width: auto;\r\n        }\r\n    }\r\n\r\n    .none_track {\r\n        color: ${colors.fontColor};\r\n        text-align: center;\r\n        font-size: 40px;\r\n    }\r\n`;\r\n","import { useTrack } from '../../services/getData';\r\nimport { TracksContainer } from './style';\r\n\r\nexport default function Tracks({ id }: { id: string }): JSX.Element {\r\n    const { data, isLoading, isError } = useTrack(id);\r\n\r\n    if (isLoading) return <h1>Loading...</h1>;\r\n\r\n    if (isError) return <h1>Error...</h1>;\r\n\r\n    const randomIndex = (max: number, min: number): number =>\r\n        Math.floor(\r\n            Math.random() * (Math.floor(max) - Math.ceil(min)) + Math.ceil(min)\r\n        );\r\n\r\n    if (!data.mvids) {\r\n        return (\r\n            <TracksContainer style={{ justifyContent: 'center' }}>\r\n                <p className=\"none_track\">None track</p>\r\n            </TracksContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <TracksContainer>\r\n            <iframe\r\n                src={`https://www.youtube.com/embed/${\r\n                    data.mvids[\r\n                        randomIndex(data.mvids.length, 0)\r\n                    ].strMusicVid.split('?v=')[1]\r\n                }`}\r\n                frameBorder=\"0\"\r\n                title=\"track_1\"\r\n            />\r\n            <iframe\r\n                src={`https://www.youtube.com/embed/${\r\n                    data.mvids[\r\n                        randomIndex(data.mvids.length, 0)\r\n                    ].strMusicVid.split('?v=')[1]\r\n                }`}\r\n                frameBorder=\"0\"\r\n                title=\"track_2\"\r\n            />\r\n            <iframe\r\n                src={`https://www.youtube.com/embed/${\r\n                    data.mvids[\r\n                        randomIndex(data.mvids.length, 0)\r\n                    ].strMusicVid.split('?v=')[1]\r\n                }`}\r\n                frameBorder=\"0\"\r\n                title=\"track_3\"\r\n            />\r\n        </TracksContainer>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const LoadingContainer = styled.div`\r\n    background: #000;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    img {\r\n        height: auto;\r\n        width: 300px;\r\n    }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/loading.79a159df.gif\";","import { LoadingContainer } from './style';\r\nimport gif from '../../images/loading.gif';\r\n\r\nexport default function Loading(): JSX.Element {\r\n    return (\r\n        <LoadingContainer>\r\n            <img src={gif} alt=\"loading gif\" />\r\n        </LoadingContainer>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.37ae16bc.jpg\";","import styled from 'styled-components';\r\nimport * as colors from '../../styles/colors';\r\n\r\nexport const ErrorContainer = styled.div`\r\n    background: #000;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    h1 {\r\n        color: ${colors.fontColor};\r\n        font-size: 2.6em;\r\n        font-weight: 600;\r\n    }\r\n\r\n    a {\r\n        background: #071307;\r\n        color: ${colors.fontColor};\r\n        font-size: 1.8em;\r\n        display: block;\r\n        height: 45px;\r\n        padding: 10px;\r\n        margin: 8px 0;\r\n        text-decoration: none;\r\n        text-align: center;\r\n        width: 240px;\r\n    }\r\n`;\r\n","import { Link } from 'react-router-dom';\r\nimport { ErrorContainer } from './style';\r\n\r\nexport default function Error(): JSX.Element {\r\n    return (\r\n        <ErrorContainer>\r\n            <h1>Error</h1>\r\n            <Link to=\"/\">Return to home</Link>\r\n        </ErrorContainer>\r\n    );\r\n}\r\n","import { Redirect, useParams, Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { IoMdReturnLeft } from 'react-icons/io';\r\nimport { useArtist } from '../../services/getData';\r\nimport { MainContainer } from './style';\r\nimport Album from '../../components/Album/Album';\r\nimport Tracks from '../../components/Tracks/Tracks';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport gif from '../../images/load-image-gif.gif';\r\nimport background from '../../images/background.jpg';\r\nimport Error from '../../components/Error/Error';\r\n\r\nconst htmlBackground = document.querySelector('html') as HTMLElement;\r\n\r\nexport default function ArtistPage(): JSX.Element {\r\n    const { name } = useParams<{ name: string }>();\r\n    const { data, isLoading, isError } = useArtist(name);\r\n\r\n    if (isLoading) return <Loading />;\r\n\r\n    if (isError) return <Error />;\r\n\r\n    if (data.artists === null) {\r\n        toast.error('nothing found');\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    if (data.artists[0].strArtistWideThumb !== null) {\r\n        htmlBackground.style.backgroundImage = `url(${data.artists[0].strArtistWideThumb})`;\r\n    } else {\r\n        htmlBackground.style.backgroundImage = `url(${background})`;\r\n    }\r\n\r\n    return (\r\n        <MainContainer>\r\n            <section>\r\n                <Link to=\"/\">\r\n                    <IoMdReturnLeft size={50} color=\"#d8d8d8\" />\r\n                </Link>\r\n                <div className=\"artist_informations\">\r\n                    <a\r\n                        className=\"artist_logo\"\r\n                        href={`https://${data.artists[0].strWebsite}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <h1>\r\n                            <img\r\n                                src={\r\n                                    !isLoading\r\n                                        ? data.artists[0].strArtistLogo\r\n                                        : gif\r\n                                }\r\n                                alt={data.artists[0].strArtist}\r\n                            />\r\n                        </h1>\r\n                    </a>\r\n                    <ul className=\"artist_informations-data\">\r\n                        <li>{data.artists[0].intFormedYear}</li>\r\n                        <li>{data.artists[0].strGenre}</li>\r\n                        <li>{data.artists[0].strStyle}</li>\r\n                    </ul>\r\n                    <ul className=\"artist_informations-social-medias\">\r\n                        <li>\r\n                            <a href={`https://${data.artists[0].strTwitter}`}>\r\n                                {data.artists[0].strTwitter}\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href={`https://${data.artists[0].strFacebook}`}>\r\n                                {data.artists[0].strFacebook}\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    <p>{data.artists[0].strBiographyEN}</p>\r\n                </div>\r\n                <div className=\"artist_informations-image\">\r\n                    <img\r\n                        src={!isLoading ? data.artists[0].strArtistThumb : gif}\r\n                        alt={data.artists[0].strArtist}\r\n                    />\r\n                </div>\r\n                <div className=\"album-container\">\r\n                    <h1>Albums</h1>\r\n                    <Album id={data.artists[0].idArtist} />\r\n                </div>\r\n                <div className=\"tracks-container\">\r\n                    <h1>Some tracks</h1>\r\n                    <Tracks id={data.artists[0].idArtist} />\r\n                </div>\r\n            </section>\r\n        </MainContainer>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\nimport * as colors from '../../styles/colors';\r\n\r\nexport const BackgroundContainer = styled.div`\r\n    background: rgba(28, 32, 44, 0.952);\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    z-index: -1;\r\n`;\r\n\r\nexport const SearchContainer = styled.section`\r\n    max-width: 600px;\r\n    margin: 100px auto;\r\n    padding: 0 25px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    z-index: 1;\r\n\r\n    @media (max-width: 640px) {\r\n        margin: 15px auto;\r\n    }\r\n\r\n    h1 {\r\n        color: ${colors.cinza};\r\n        font-weight: 100;\r\n        font-size: 28px;\r\n        margin-bottom: 30px;\r\n\r\n        @media (max-width: 640px) {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    form {\r\n        border-bottom: 2.5px solid ${colors.cinza};\r\n        width: 100%;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        input {\r\n            border: none;\r\n            background: transparent;\r\n            color: ${colors.cinza};\r\n            outline: none;\r\n            height: 45px;\r\n            font-size: 18px;\r\n            padding: 10px;\r\n            border-radius: 20px;\r\n            width: 100%;\r\n\r\n            &::placeholder {\r\n                color: ${colors.white};\r\n            }\r\n        }\r\n\r\n        button {\r\n            border: none;\r\n            background: transparent;\r\n            cursor: pointer;\r\n            height: 45px;\r\n        }\r\n    }\r\n\r\n    .recently_searched {\r\n        margin: 30px 0;\r\n\r\n        @media (max-width: 640px) {\r\n            margin: 0;\r\n            margin-top: 15px;\r\n        }\r\n\r\n        display: flex;\r\n        align-items: flex-start;\r\n        justify-content: flex-start;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .recently_searched {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 100%;\r\n\r\n        .title {\r\n            h2 {\r\n                color: ${colors.cinza};\r\n                font-weight: 100;\r\n                font-size: 28px;\r\n                margin-bottom: 15px;\r\n            }\r\n        }\r\n        .recently_searched-cards {\r\n            display: flex;\r\n            align-items: center;\r\n            flex-wrap: wrap;\r\n            width: 100%;\r\n\r\n            @media (max-width: 640px) {\r\n                display: grid;\r\n                gap: 5px;\r\n                grid-template-rows: auto auto;\r\n                grid-template-columns: auto auto;\r\n            }\r\n\r\n            .card {\r\n                margin-right: 10px;\r\n\r\n                img {\r\n                    height: 140px;\r\n                    width: 140px;\r\n\r\n                    @media (max-width: 640px) {\r\n                        height: 100%;\r\n                        width: 100%;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import { FormEvent, useState, useEffect } from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { SearchContainer, BackgroundContainer } from './style';\r\nimport { baseUrl } from '../../services/getData';\r\n\r\ntype artistType = {\r\n    name: string;\r\n    image: string;\r\n    id: number;\r\n};\r\n\r\nexport default function Index(): JSX.Element {\r\n    const [artist, setArtist] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [searched, setSearched] = useState<artistType[]>([]);\r\n\r\n    useEffect(() => {\r\n        const artists = localStorage.getItem('artists');\r\n\r\n        if (artists) {\r\n            setSearched(JSON.parse(artists));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('artists', JSON.stringify(searched));\r\n    }, [searched]);\r\n\r\n    const handleSubmit = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n        const request = await fetch(`${baseUrl}/search.php?s=${artist}`);\r\n        const data: {\r\n            artists: Array<{\r\n                strArtist: string;\r\n                strArtistThumb: string;\r\n            }>;\r\n        } = await request.json();\r\n        const index = searched.findIndex((obj) => obj.name === artist);\r\n        if (index === -1 && data.artists) {\r\n            if (searched.length <= 3) {\r\n                setSearched([\r\n                    ...searched,\r\n                    {\r\n                        name: artist.toLocaleLowerCase(),\r\n                        image: data.artists[0].strArtistThumb,\r\n                        id: searched.length,\r\n                    },\r\n                ]);\r\n            } else {\r\n                const copyState = [...searched];\r\n                let menor = copyState[0].id;\r\n                copyState.forEach((obj) => {\r\n                    if (obj.id < menor) menor = obj.id;\r\n                });\r\n                const minItemIndex = copyState.findIndex(\r\n                    (obj) => obj.id === menor\r\n                );\r\n                copyState.splice(minItemIndex, 1, {\r\n                    name: artist.toLocaleLowerCase(),\r\n                    image: data.artists[0].strArtistThumb,\r\n                    id: copyState.length + menor,\r\n                });\r\n                setSearched(copyState);\r\n            }\r\n        }\r\n        setRedirect(true);\r\n    };\r\n\r\n    if (redirect) return <Redirect to={`/artist/${artist}`} />;\r\n\r\n    return (\r\n        <>\r\n            <BackgroundContainer />\r\n            <SearchContainer>\r\n                <h1>Search by name of your favorite artist</h1>\r\n                <form onSubmit={(e) => handleSubmit(e)}>\r\n                    <input\r\n                        autoComplete=\"off\"\r\n                        type=\"text\"\r\n                        name=\"artist\"\r\n                        id=\"artist\"\r\n                        placeholder=\"artist name\"\r\n                        onChange={(e) =>\r\n                            setArtist(e.target.value.toLocaleLowerCase())\r\n                        }\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={!artist}\r\n                        style={!artist ? { opacity: 0.5 } : { opacity: 1 }}\r\n                    >\r\n                        <FaSearch size={32} color=\"#e9e7f8\" />\r\n                    </button>\r\n                </form>\r\n                <div className=\"recently_searched\">\r\n                    <div className=\"title\">\r\n                        <h2>Recently searched</h2>\r\n                    </div>\r\n                    <div className=\"recently_searched-cards\">\r\n                        {searched.map((artistiSearched) => (\r\n                            <Link to={`/artist/${artistiSearched.name}`}>\r\n                                <div className=\"card\">\r\n                                    <img\r\n                                        src={artistiSearched.image}\r\n                                        alt={artistiSearched.name}\r\n                                    />\r\n                                </div>\r\n                            </Link>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </SearchContainer>\r\n        </>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\nimport * as colors from '../../styles/colors';\r\n\r\nexport const AlbumContainer = styled.main`\r\n    background: rgba(28, 32, 44, 0.8);\r\n    max-width: 100%;\r\n    padding: 25px;\r\n    margin: 0 auto;\r\n\r\n    section {\r\n        padding: 25px;\r\n        max-width: 1200px;\r\n        margin: 0 auto;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n\r\n        .prev_button {\r\n            border: none;\r\n            cursor: pointer;\r\n            background: transparent;\r\n            outline: none;\r\n        }\r\n\r\n        .album_title {\r\n            color: ${colors.fontColor};\r\n            font-size: 2.6em;\r\n\r\n            @media (max-width: 640px) {\r\n                text-align: center;\r\n            }\r\n        }\r\n\r\n        .album_tumb {\r\n            max-height: 400px;\r\n            max-width: 400px;\r\n            margin: 25px 0;\r\n\r\n            @media (max-width: 640px) {\r\n                max-height: 300px;\r\n                max-width: 300px;\r\n            }\r\n        }\r\n\r\n        .album_tracks {\r\n            li {\r\n                border-bottom: 1px solid ${colors.fontColor};\r\n                padding-bottom: 10px;\r\n                margin: 10px 0;\r\n                color: ${colors.fontColor};\r\n                list-style: none;\r\n                font-size: 1em;\r\n                text-align: center;\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import { useParams, useHistory } from 'react-router-dom';\r\nimport { IoMdReturnLeft } from 'react-icons/io';\r\nimport { useAlbum, useAlbumTracks } from '../../services/getData';\r\nimport { AlbumContainer } from './style';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport gif from '../../images/load-image-gif.gif';\r\nimport isEmpty from '../../utils/isEmpty';\r\n\r\nexport default function AlbumPage(): JSX.Element {\r\n    const { artistId, albumId } =\r\n        useParams<{ artistId: string; albumId: string }>();\r\n    const { data, isError, isLoading } = useAlbumTracks(albumId);\r\n    const {\r\n        albumData,\r\n        isError: albumError,\r\n        isLoading: albumLoading,\r\n    } = useAlbum(artistId);\r\n    const history = useHistory();\r\n\r\n    if (isLoading || albumLoading) return <Loading />;\r\n\r\n    if (isError || albumError) return <h1>Error...</h1>;\r\n\r\n    return (\r\n        <AlbumContainer>\r\n            <section>\r\n                <button\r\n                    className=\"prev_button\"\r\n                    type=\"button\"\r\n                    onClick={() => history.goBack()}\r\n                >\r\n                    <IoMdReturnLeft size={50} color=\"#d8d8d8\" />\r\n                </button>\r\n                <h1 className=\"album_title\">{data.track[0].strAlbum}</h1>\r\n                <img\r\n                    className=\"album_tumb\"\r\n                    src={\r\n                        !isLoading || !albumLoading\r\n                            ? isEmpty(\r\n                                  albumData.album.find(\r\n                                      (album) => album.idAlbum === albumId\r\n                                  )?.strAlbumThumb\r\n                              )\r\n                            : gif\r\n                    }\r\n                    alt={\r\n                        albumData.album.find(\r\n                            (album) => album.idAlbum === albumId\r\n                        )?.idAlbum\r\n                    }\r\n                />\r\n                <ul className=\"album_tracks\">\r\n                    {data.track.map((track) => (\r\n                        <li>\r\n                            <h1>{track.strTrack}</h1>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n        </AlbumContainer>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\nimport * as colors from '../../styles/colors';\r\n\r\nexport const NotFoundContainer = styled.div`\r\n    background: #000;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    img {\r\n        height: auto;\r\n        width: 300px;\r\n    }\r\n\r\n    a {\r\n        background: #071307;\r\n        color: ${colors.fontColor};\r\n        font-size: 1.8em;\r\n        display: block;\r\n        height: 45px;\r\n        padding: 10px;\r\n        margin: 8px 0;\r\n        text-decoration: none;\r\n        text-align: center;\r\n        width: 240px;\r\n    }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/404.80d0b630.gif\";","import { Link } from 'react-router-dom';\r\nimport { NotFoundContainer } from './style';\r\nimport notfound from '../../images/404.gif';\r\n\r\nexport default function NotFound(): JSX.Element {\r\n    return (\r\n        <NotFoundContainer>\r\n            <img src={notfound} alt=\"404 gif\" />\r\n            <Link to=\"/\">Return to home</Link>\r\n        </NotFoundContainer>\r\n    );\r\n}\r\n","import { Switch, Route } from 'react-router-dom';\r\nimport ArtistPage from '../pages/ArtistPage/ArtistPage';\r\nimport Index from '../pages/Index/Index';\r\nimport AlbumPage from '../pages/AlbumPage/AlbumPage';\r\nimport NotFound from '../components/404/404';\r\n\r\nexport default function Routes(): JSX.Element {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Index} />\r\n            <Route exact path=\"/artist/:name\" component={ArtistPage} />\r\n            <Route\r\n                exact\r\n                path=\"/album/:artistId/:albumId\"\r\n                component={AlbumPage}\r\n            />\r\n            <Route exact path=\"*\" component={NotFound} />\r\n        </Switch>\r\n    );\r\n}\r\n","import { HashRouter } from 'react-router-dom';\r\nimport Routes from './routes/Routes';\r\n\r\nexport default function App(): JSX.Element {\r\n    return (\r\n        <HashRouter>\r\n            <Routes />\r\n        </HashRouter>\r\n    );\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport background from '../images/background.jpg';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        font-family: 'RocknRoll One', sans-serif;\r\n    }\r\n\r\n    html {\r\n        background: url(${background}) no-repeat center center fixed;\r\n        -webkit-background-size: cover;\r\n        -moz-background-size: cover;\r\n        -o-background-size: cover;\r\n        background-size: cover;\r\n    }\r\n\r\n    html, body, #root {\r\n        width: 100%;\r\n    }\r\n`;\r\n","import { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport App from './App';\r\nimport { GlobalStyles } from './styles/GlobalStyles';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nReactDOM.render(\r\n    <StrictMode>\r\n        <GlobalStyles />\r\n        <App />\r\n        <ToastContainer />\r\n    </StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}