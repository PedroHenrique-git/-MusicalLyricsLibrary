{"version":3,"sources":["services/getData.ts","styles/colors.ts","pages/ArtistPage/style.tsx","components/Album/style.tsx","images/load-image-gif.gif","images/default.jpg","utils/isEmpty.ts","components/Album/Album.tsx","components/Tracks/style.tsx","components/Tracks/Tracks.tsx","components/Loading/style.tsx","images/loading.gif","components/Loading/Loading.tsx","images/background.jpg","components/Error/style.tsx","components/Error/Error.tsx","pages/ArtistPage/ArtistPage.tsx","pages/Index/style.tsx","pages/Index/Index.tsx","pages/AlbumPage/style.tsx","pages/AlbumPage/AlbumPage.tsx","components/404/style.tsx","images/404.gif","components/404/404.tsx","routes/Routes.tsx","App.tsx","styles/GlobalStyles.tsx","index.tsx"],"names":["baseUrl","fetcher","url","fetch","then","resp","json","useAlbum","id","useSWR","data","error","albumData","isLoading","isError","fontColor","cinza","MainContainer","styled","main","colors","Albums","div","img","def","Album","album","map","to","idArtist","idAlbum","className","src","gif","isEmpty","strAlbumThumb","alt","TracksContainer","section","Tracks","useTrack","randomIndex","max","min","Math","floor","random","ceil","mvids","length","strMusicVid","split","frameBorder","title","style","justifyContent","LoadingContainer","Loading","ErrorContainer","Error","htmlBackground","document","querySelector","ArtistPage","name","useArtist","useParams","artists","toast","strArtistWideThumb","backgroundImage","background","size","color","href","strWebsite","target","rel","strArtistLogo","strArtist","intFormedYear","strGenre","strStyle","strTwitter","strFacebook","strBiographyEN","strArtistThumb","BackgroundContainer","SearchContainer","Index","useState","artist","setArtist","redirect","setRedirect","searched","setSearched","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","handleSubmit","e","a","preventDefault","request","findIndex","obj","toLocaleLowerCase","image","copyState","menor","forEach","minItemIndex","splice","onSubmit","autoComplete","type","placeholder","onChange","value","disabled","opacity","artistiSearched","AlbumContainer","AlbumPage","artistId","albumId","useAlbumTracks","albumError","albumLoading","history","useHistory","onClick","goBack","track","strAlbum","find","strTrack","NotFoundContainer","NotFound","notfound","Routes","exact","path","component","App","GlobalStyles","createGlobalStyle","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.aeba2011.chunk.js","sourcesContent":["import useSWR from 'swr';\nimport IAlbum from '../interfaces/IAlbum';\nimport IAlbumTrack from '../interfaces/IAlbumTrack';\nimport IArtist from '../interfaces/IArtist';\nimport ITrack from '../interfaces/ITrack';\n\nexport const baseUrl = 'https://www.theaudiodb.com/api/v1/json/1/';\n\nconst fetcher = (url: string): Promise<any> =>\n    fetch(url).then((resp) => resp.json());\n\nexport function useArtist(name: string): IArtist {\n    const { data, error } = useSWR(`${baseUrl}/search.php?s=${name}`, fetcher);\n\n    return {\n        data,\n        isLoading: !data && !error,\n        isError: error,\n    };\n}\n\nexport function useAlbum(id: string): IAlbum {\n    const { data, error } = useSWR(`${baseUrl}/album.php?i=${id}`, fetcher);\n\n    return {\n        albumData: data,\n        isLoading: !data && !error,\n        isError: error,\n    };\n}\n\nexport function useTrack(id: string): ITrack {\n    const { data, error } = useSWR(`${baseUrl}/mvid.php?i=${id}`, fetcher);\n\n    return {\n        data,\n        isLoading: !data && !error,\n        isError: error,\n    };\n}\n\nexport function useAlbumTracks(id: string): IAlbumTrack {\n    const { data, error } = useSWR(`${baseUrl}/track.php?m=${id}`, fetcher);\n\n    return {\n        data,\n        isLoading: !data && !error,\n        isError: error,\n    };\n}\n","export const white = '#fff';\nexport const black = '#000';\nexport const fontColor = '#d8d8d8';\nexport const cinza = '#e9e7f8';\n","import styled from 'styled-components';\nimport * as colors from '../../styles/colors';\n\nexport const MainContainer = styled.main`\n    background: rgba(28, 32, 44, 0.8);\n    max-width: 100%;\n    padding: 25px;\n    margin: 0 auto;\n\n    section {\n        max-width: 1200px;\n        margin: 0 auto;\n    }\n\n    h1 {\n        color: ${colors.fontColor};\n        font-size: 70px;\n        text-align: center;\n\n        @media (max-width: 640px) {\n            font-size: 55px;\n        }\n    }\n\n    .artist_logo {\n        display: flex;\n        align-content: center;\n        justify-content: center;\n        max-width: 100%;\n        h1 {\n            width: 100%;\n\n            img {\n                height: 100%;\n                max-width: 100%;\n            }\n        }\n    }\n\n    .artist_informations {\n        a {\n            text-decoration: none;\n        }\n        .artist_informations-data,\n        .artist_informations-social-medias {\n            display: flex;\n            flex-direction: column;\n\n            li,\n            a {\n                color: ${colors.fontColor};\n                list-style: none;\n                font-size: 20px;\n                text-decoration: none;\n            }\n        }\n\n        .artist_informations-social-medias {\n            margin-top: 20px;\n        }\n\n        p {\n            color: ${colors.fontColor};\n            font-size: 16px;\n            margin: 20px 0;\n            text-align: left;\n            max-height: 400px;\n            overflow-y: auto;\n\n            &::-webkit-scrollbar {\n                width: 0.4em;\n            }\n\n            &::-webkit-scrollbar-track {\n                box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n            }\n\n            &::-webkit-scrollbar-thumb {\n                background-color: ${colors.fontColor};\n                outline: 1px solid slategrey;\n            }\n        }\n    }\n\n    .artist_informations-image {\n        margin: 30px auto 0 auto;\n        max-height: 700px;\n        max-width: 700px;\n        img {\n            height: 100%;\n            width: 100%;\n        }\n    }\n\n    .album-container,\n    .tracks-container {\n        margin-top: 80px;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const Albums = styled.div`\n    margin-top: 40px;\n\n    display: grid;\n    align-content: center;\n    justify-content: center;\n    gap: 20px;\n    grid-template-columns: repeat(4, 0.22234fr);\n\n    @media (max-width: 640px) {\n        gap: 10px;\n        grid-template-columns: repeat(3, 1fr);\n    }\n\n    a {\n        display: block;\n        height: 100%;\n        width: 100%;\n    }\n\n    .album {\n        height: 100%;\n        width: 100%;\n        img {\n            object-fit: cover;\n            height: 100%;\n            width: 100%;\n        }\n\n        &:hover {\n            transform: scale(1.3);\n            transition: all 0.3s;\n        }\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/load-image-gif.b74d0983.gif\";","export default __webpack_public_path__ + \"static/media/default.2d86ca35.jpg\";","import def from '../images/default.jpg';\n\nexport default (img: string | undefined): string | undefined => {\n    if (img) return img;\n    return def;\n};\n","import { Link } from 'react-router-dom';\nimport { useAlbum } from '../../services/getData';\nimport { Albums } from './style';\nimport gif from '../../images/load-image-gif.gif';\nimport isEmpty from '../../utils/isEmpty';\n\nexport default function Album({ id }: { id: string }): JSX.Element {\n    const { albumData, isLoading, isError } = useAlbum(id);\n\n    if (isLoading) return <h1>Loading...</h1>;\n\n    if (isError) return <h1>Error...</h1>;\n\n    return (\n        <Albums>\n            {albumData.album.map((album) => (\n                <Link to={`/album/${album.idArtist}/${album.idAlbum}`}>\n                    <div className=\"album\">\n                        <img\n                            src={\n                                !isLoading ? isEmpty(album.strAlbumThumb) : gif\n                            }\n                            alt={album.idAlbum}\n                        />\n                    </div>\n                </Link>\n            ))}\n        </Albums>\n    );\n}\n","import styled from 'styled-components';\nimport * as colors from '../../styles/colors';\n\nexport const TracksContainer = styled.section`\n    margin: 40px auto 0 auto !important;\n    display: flex;\n    gap: 50px;\n\n    @media (max-width: 1546px) {\n        justify-content: center;\n    }\n\n    @media (max-width: 1020px) {\n        flex-direction: column;\n    }\n\n    iframe {\n        min-height: 280px;\n        min-width: 420px;\n\n        @media (max-width: 1546px) {\n            max-height: 280px;\n            min-width: auto;\n        }\n\n        @media (max-width: 1020px) {\n            max-height: 400px;\n        }\n\n        @media (max-width: 640px) {\n            min-height: 280px;\n            min-width: auto;\n        }\n    }\n\n    .none_track {\n        color: ${colors.fontColor};\n        text-align: center;\n        font-size: 40px;\n    }\n`;\n","import { useTrack } from '../../services/getData';\nimport { TracksContainer } from './style';\n\nexport default function Tracks({ id }: { id: string }): JSX.Element {\n    const { data, isLoading, isError } = useTrack(id);\n\n    if (isLoading) return <h1>Loading...</h1>;\n\n    if (isError) return <h1>Error...</h1>;\n\n    const randomIndex = (max: number, min: number): number =>\n        Math.floor(\n            Math.random() * (Math.floor(max) - Math.ceil(min)) + Math.ceil(min)\n        );\n\n    if (!data.mvids) {\n        return (\n            <TracksContainer style={{ justifyContent: 'center' }}>\n                <p className=\"none_track\">None track</p>\n            </TracksContainer>\n        );\n    }\n\n    return (\n        <TracksContainer>\n            <iframe\n                src={`https://www.youtube.com/embed/${\n                    data.mvids[\n                        randomIndex(data.mvids.length, 0)\n                    ].strMusicVid.split('?v=')[1]\n                }`}\n                frameBorder=\"0\"\n                title=\"track_1\"\n            />\n            <iframe\n                src={`https://www.youtube.com/embed/${\n                    data.mvids[\n                        randomIndex(data.mvids.length, 0)\n                    ].strMusicVid.split('?v=')[1]\n                }`}\n                frameBorder=\"0\"\n                title=\"track_2\"\n            />\n            <iframe\n                src={`https://www.youtube.com/embed/${\n                    data.mvids[\n                        randomIndex(data.mvids.length, 0)\n                    ].strMusicVid.split('?v=')[1]\n                }`}\n                frameBorder=\"0\"\n                title=\"track_3\"\n            />\n        </TracksContainer>\n    );\n}\n","import styled from 'styled-components';\n\nexport const LoadingContainer = styled.div`\n    background: #000;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    img {\n        height: auto;\n        width: 300px;\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/loading.79a159df.gif\";","import { LoadingContainer } from './style';\nimport gif from '../../images/loading.gif';\n\nexport default function Loading(): JSX.Element {\n    return (\n        <LoadingContainer>\n            <img src={gif} alt=\"loading gif\" />\n        </LoadingContainer>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/background.37ae16bc.jpg\";","import styled from 'styled-components';\nimport * as colors from '../../styles/colors';\n\nexport const ErrorContainer = styled.div`\n    background: #000;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n\n    h1 {\n        color: ${colors.fontColor};\n        font-size: 2.6em;\n        font-weight: 600;\n    }\n\n    a {\n        background: #071307;\n        color: ${colors.fontColor};\n        font-size: 1.8em;\n        display: block;\n        height: 45px;\n        padding: 10px;\n        margin: 8px 0;\n        text-decoration: none;\n        text-align: center;\n        width: 240px;\n    }\n`;\n","import { Link } from 'react-router-dom';\nimport { ErrorContainer } from './style';\n\nexport default function Error(): JSX.Element {\n    return (\n        <ErrorContainer>\n            <h1>Error</h1>\n            <Link to=\"/\">Return to home</Link>\n        </ErrorContainer>\n    );\n}\n","import { Redirect, useParams, Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { IoMdReturnLeft } from 'react-icons/io';\nimport { useArtist } from '../../services/getData';\nimport { MainContainer } from './style';\nimport Album from '../../components/Album/Album';\nimport Tracks from '../../components/Tracks/Tracks';\nimport Loading from '../../components/Loading/Loading';\nimport gif from '../../images/load-image-gif.gif';\nimport background from '../../images/background.jpg';\nimport Error from '../../components/Error/Error';\n\nconst htmlBackground = document.querySelector('html') as HTMLElement;\n\nexport default function ArtistPage(): JSX.Element {\n    const { name } = useParams<{ name: string }>();\n    const { data, isLoading, isError } = useArtist(name);\n\n    if (isLoading) return <Loading />;\n\n    if (isError) return <Error />;\n\n    if (data.artists === null) {\n        toast.error('nothing found');\n        return <Redirect to=\"/\" />;\n    }\n\n    if (data.artists[0].strArtistWideThumb !== null) {\n        htmlBackground.style.backgroundImage = `url(${data.artists[0].strArtistWideThumb})`;\n    } else {\n        htmlBackground.style.backgroundImage = `url(${background})`;\n    }\n\n    return (\n        <MainContainer>\n            <section>\n                <Link to=\"/\">\n                    <IoMdReturnLeft size={50} color=\"#d8d8d8\" />\n                </Link>\n                <div className=\"artist_informations\">\n                    <a\n                        className=\"artist_logo\"\n                        href={`https://${data.artists[0].strWebsite}`}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <h1>\n                            <img\n                                src={\n                                    !isLoading\n                                        ? data.artists[0].strArtistLogo\n                                        : gif\n                                }\n                                alt={data.artists[0].strArtist}\n                            />\n                        </h1>\n                    </a>\n                    <ul className=\"artist_informations-data\">\n                        <li>{data.artists[0].intFormedYear}</li>\n                        <li>{data.artists[0].strGenre}</li>\n                        <li>{data.artists[0].strStyle}</li>\n                    </ul>\n                    <ul className=\"artist_informations-social-medias\">\n                        <li>\n                            <a href={`https://${data.artists[0].strTwitter}`}>\n                                {data.artists[0].strTwitter}\n                            </a>\n                        </li>\n                        <li>\n                            <a href={`https://${data.artists[0].strFacebook}`}>\n                                {data.artists[0].strFacebook}\n                            </a>\n                        </li>\n                    </ul>\n                    <p>{data.artists[0].strBiographyEN}</p>\n                </div>\n                <div className=\"artist_informations-image\">\n                    <img\n                        src={!isLoading ? data.artists[0].strArtistThumb : gif}\n                        alt={data.artists[0].strArtist}\n                    />\n                </div>\n                <div className=\"album-container\">\n                    <h1>Albums</h1>\n                    <Album id={data.artists[0].idArtist} />\n                </div>\n                <div className=\"tracks-container\">\n                    <h1>Some tracks</h1>\n                    <Tracks id={data.artists[0].idArtist} />\n                </div>\n            </section>\n        </MainContainer>\n    );\n}\n","import styled from 'styled-components';\nimport * as colors from '../../styles/colors';\n\nexport const BackgroundContainer = styled.div`\n    background: rgba(28, 32, 44, 0.952);\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    z-index: -1;\n`;\n\nexport const SearchContainer = styled.section`\n    max-width: 600px;\n    margin: 100px auto;\n    padding: 0 25px;\n\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    z-index: 1;\n\n    @media (max-width: 640px) {\n        margin: 30px auto;\n    }\n\n    h1 {\n        color: ${colors.cinza};\n        font-weight: 100;\n        font-size: 28px;\n        margin-bottom: 30px;\n\n        @media (max-width: 640px) {\n            text-align: center;\n        }\n    }\n\n    form {\n        border-bottom: 2.5px solid ${colors.cinza};\n        width: 100%;\n\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        input {\n            border: none;\n            background: transparent;\n            color: ${colors.cinza};\n            outline: none;\n            height: 45px;\n            font-size: 18px;\n            padding: 10px;\n            border-radius: 20px;\n            width: 100%;\n\n            &::placeholder {\n                color: ${colors.white};\n            }\n        }\n\n        button {\n            border: none;\n            background: transparent;\n            cursor: pointer;\n            height: 45px;\n        }\n    }\n\n    .recently_searched {\n        margin: 30px 0;\n\n        display: flex;\n        align-items: flex-start;\n        justify-content: flex-start;\n        flex-direction: column;\n    }\n\n    .recently_searched {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n\n        .title {\n            h2 {\n                color: ${colors.cinza};\n                font-weight: 100;\n                font-size: 28px;\n                margin-bottom: 15px;\n            }\n        }\n        .recently_searched-cards {\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            flex-wrap: wrap;\n            width: 100%;\n\n            .card {\n                img {\n                    height: 140px;\n                    width: 140px;\n\n                    @media (max-width: 640px) {\n                        margin-bottom: 10px;\n                        height: 170px;\n                        width: 170px;\n                    }\n                }\n            }\n        }\n    }\n`;\n","import { FormEvent, useState, useEffect } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport { Redirect, Link } from 'react-router-dom';\nimport { SearchContainer, BackgroundContainer } from './style';\nimport { baseUrl } from '../../services/getData';\n\ntype artistType = {\n    name: string;\n    image: string;\n    id: number;\n};\n\nexport default function Index(): JSX.Element {\n    const [artist, setArtist] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    const [searched, setSearched] = useState<artistType[]>([]);\n\n    useEffect(() => {\n        const artists = localStorage.getItem('artists');\n\n        if (artists) {\n            setSearched(JSON.parse(artists));\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('artists', JSON.stringify(searched));\n    }, [searched]);\n\n    const handleSubmit = async (e: FormEvent) => {\n        e.preventDefault();\n        const request = await fetch(`${baseUrl}/search.php?s=${artist}`);\n        const data: {\n            artists: Array<{\n                strArtist: string;\n                strArtistThumb: string;\n            }>;\n        } = await request.json();\n        const index = searched.findIndex((obj) => obj.name === artist);\n        if (index === -1 && data.artists) {\n            if (searched.length <= 3) {\n                setSearched([\n                    ...searched,\n                    {\n                        name: artist.toLocaleLowerCase(),\n                        image: data.artists[0].strArtistThumb,\n                        id: searched.length,\n                    },\n                ]);\n            } else {\n                const copyState = [...searched];\n                let menor = copyState[0].id;\n                copyState.forEach((obj) => {\n                    if (obj.id < menor) menor = obj.id;\n                });\n                const minItemIndex = copyState.findIndex(\n                    (obj) => obj.id === menor\n                );\n                copyState.splice(minItemIndex, 1, {\n                    name: artist.toLocaleLowerCase(),\n                    image: data.artists[0].strArtistThumb,\n                    id: copyState.length + menor,\n                });\n                setSearched(copyState);\n            }\n        }\n        setRedirect(true);\n    };\n\n    if (redirect) return <Redirect to={`/artist/${artist}`} />;\n\n    return (\n        <>\n            <BackgroundContainer />\n            <SearchContainer>\n                <h1>Search by name of your favorite artist</h1>\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <input\n                        autoComplete=\"off\"\n                        type=\"text\"\n                        name=\"artist\"\n                        id=\"artist\"\n                        placeholder=\"artist name\"\n                        onChange={(e) =>\n                            setArtist(e.target.value.toLocaleLowerCase())\n                        }\n                    />\n                    <button\n                        type=\"submit\"\n                        disabled={!artist}\n                        style={!artist ? { opacity: 0.5 } : { opacity: 1 }}\n                    >\n                        <FaSearch size={32} color=\"#e9e7f8\" />\n                    </button>\n                </form>\n                <div className=\"recently_searched\">\n                    <div className=\"title\">\n                        <h2>Recently searched</h2>\n                    </div>\n                    <div className=\"recently_searched-cards\">\n                        {searched.map((artistiSearched) => (\n                            <Link to={`/artist/${artistiSearched.name}`}>\n                                <div className=\"card\">\n                                    <img\n                                        src={artistiSearched.image}\n                                        alt={artistiSearched.name}\n                                    />\n                                </div>\n                            </Link>\n                        ))}\n                    </div>\n                </div>\n            </SearchContainer>\n        </>\n    );\n}\n","import styled from 'styled-components';\nimport * as colors from '../../styles/colors';\n\nexport const AlbumContainer = styled.main`\n    background: rgba(28, 32, 44, 0.8);\n    max-width: 100%;\n    padding: 25px;\n    margin: 0 auto;\n\n    section {\n        padding: 25px;\n        max-width: 1200px;\n        margin: 0 auto;\n\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n        justify-content: center;\n\n        .prev_button {\n            border: none;\n            cursor: pointer;\n            background: transparent;\n            outline: none;\n        }\n\n        .album_title {\n            color: ${colors.fontColor};\n            font-size: 2.6em;\n            white-space: nowrap;\n        }\n\n        .album_tumb {\n            max-height: 400px;\n            max-width: 400px;\n            margin: 25px 0;\n        }\n\n        .album_tracks {\n            li {\n                border-bottom: 1px solid ${colors.fontColor};\n                padding-bottom: 10px;\n                margin: 10px 0;\n                color: ${colors.fontColor};\n                list-style: none;\n                font-size: 1em;\n                text-align: center;\n            }\n        }\n    }\n`;\n","import { useParams, useHistory } from 'react-router-dom';\nimport { IoMdReturnLeft } from 'react-icons/io';\nimport { useAlbum, useAlbumTracks } from '../../services/getData';\nimport { AlbumContainer } from './style';\nimport Loading from '../../components/Loading/Loading';\nimport gif from '../../images/load-image-gif.gif';\nimport isEmpty from '../../utils/isEmpty';\n\nexport default function AlbumPage(): JSX.Element {\n    const { artistId, albumId } =\n        useParams<{ artistId: string; albumId: string }>();\n    const { data, isError, isLoading } = useAlbumTracks(albumId);\n    const {\n        albumData,\n        isError: albumError,\n        isLoading: albumLoading,\n    } = useAlbum(artistId);\n    const history = useHistory();\n\n    if (isLoading || albumLoading) return <Loading />;\n\n    if (isError || albumError) return <h1>Error...</h1>;\n\n    return (\n        <AlbumContainer>\n            <section>\n                <button\n                    className=\"prev_button\"\n                    type=\"button\"\n                    onClick={() => history.goBack()}\n                >\n                    <IoMdReturnLeft size={50} color=\"#d8d8d8\" />\n                </button>\n                <h1 className=\"album_title\">{data.track[0].strAlbum}</h1>\n                <img\n                    className=\"album_tumb\"\n                    src={\n                        !isLoading || !albumLoading\n                            ? isEmpty(\n                                  albumData.album.find(\n                                      (album) => album.idAlbum === albumId\n                                  )?.strAlbumThumb\n                              )\n                            : gif\n                    }\n                    alt={\n                        albumData.album.find(\n                            (album) => album.idAlbum === albumId\n                        )?.idAlbum\n                    }\n                />\n                <ul className=\"album_tracks\">\n                    {data.track.map((track) => (\n                        <li>\n                            <h1>{track.strTrack}</h1>\n                        </li>\n                    ))}\n                </ul>\n            </section>\n        </AlbumContainer>\n    );\n}\n","import styled from 'styled-components';\nimport * as colors from '../../styles/colors';\n\nexport const NotFoundContainer = styled.div`\n    background: #000;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    img {\n        height: auto;\n        width: 300px;\n    }\n\n    a {\n        background: #071307;\n        color: ${colors.fontColor};\n        font-size: 1.8em;\n        display: block;\n        height: 45px;\n        padding: 10px;\n        margin: 8px 0;\n        text-decoration: none;\n        text-align: center;\n        width: 240px;\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/404.80d0b630.gif\";","import { Link } from 'react-router-dom';\nimport { NotFoundContainer } from './style';\nimport notfound from '../../images/404.gif';\n\nexport default function NotFound(): JSX.Element {\n    return (\n        <NotFoundContainer>\n            <img src={notfound} alt=\"404 gif\" />\n            <Link to=\"/\">Return to home</Link>\n        </NotFoundContainer>\n    );\n}\n","import { Switch, Route } from 'react-router-dom';\r\nimport ArtistPage from '../pages/ArtistPage/ArtistPage';\r\nimport Index from '../pages/Index/Index';\r\nimport AlbumPage from '../pages/AlbumPage/AlbumPage';\r\nimport NotFound from '../components/404/404';\r\n\r\nexport default function Routes(): JSX.Element {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Index} />\r\n            <Route exact path=\"/artist/:name\" component={ArtistPage} />\r\n            <Route\r\n                exact\r\n                path=\"/album/:artistId/:albumId\"\r\n                component={AlbumPage}\r\n            />\r\n            <Route exact path=\"*\" component={NotFound} />\r\n        </Switch>\r\n    );\r\n}\r\n","import { HashRouter } from 'react-router-dom';\nimport Routes from './routes/Routes';\n\nexport default function App(): JSX.Element {\n    return (\n        <HashRouter>\n            <Routes />\n        </HashRouter>\n    );\n}\n","import { createGlobalStyle } from 'styled-components';\r\nimport background from '../images/background.jpg';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        font-family: 'RocknRoll One', sans-serif;\r\n    }\r\n\r\n    html {\r\n        background: url(${background}) no-repeat center center fixed;\r\n        -webkit-background-size: cover;\r\n        -moz-background-size: cover;\r\n        -o-background-size: cover;\r\n        background-size: cover;\r\n    }\r\n\r\n    html, body, #root {\r\n        width: 100%;\r\n    }\r\n`;\r\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ToastContainer } from 'react-toastify';\nimport App from './App';\nimport { GlobalStyles } from './styles/GlobalStyles';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n    <StrictMode>\n        <GlobalStyles />\n        <App />\n        <ToastContainer />\n    </StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}